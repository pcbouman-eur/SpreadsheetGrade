//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.08.30 at 07:56:21 PM CEST 
//


package nl.eur.spreadsheettest.xml;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for styleType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="styleType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="absolute" type="{assignment.xsd}absoluteType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="required" type="{assignment.xsd}functionConstraint" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="forbidden" type="{assignment.xsd}functionConstraint" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="sheetName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "styleType", propOrder = {
    "absolute",
    "required",
    "forbidden"
})
public class StyleType {

    protected List<AbsoluteType> absolute;
    protected List<FunctionConstraint> required;
    protected List<FunctionConstraint> forbidden;
    @XmlAttribute(name = "sheetName")
    protected String sheetName;

    /**
     * Gets the value of the absolute property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the absolute property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAbsolute().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AbsoluteType }
     * 
     * 
     */
    public List<AbsoluteType> getAbsolute() {
        if (absolute == null) {
            absolute = new ArrayList<AbsoluteType>();
        }
        return this.absolute;
    }

    /**
     * Gets the value of the required property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the required property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRequired().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FunctionConstraint }
     * 
     * 
     */
    public List<FunctionConstraint> getRequired() {
        if (required == null) {
            required = new ArrayList<FunctionConstraint>();
        }
        return this.required;
    }

    /**
     * Gets the value of the forbidden property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the forbidden property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getForbidden().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FunctionConstraint }
     * 
     * 
     */
    public List<FunctionConstraint> getForbidden() {
        if (forbidden == null) {
            forbidden = new ArrayList<FunctionConstraint>();
        }
        return this.forbidden;
    }

    /**
     * Gets the value of the sheetName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSheetName() {
        return sheetName;
    }

    /**
     * Sets the value of the sheetName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSheetName(String value) {
        this.sheetName = value;
    }

}
